version: "3"
services:
  mongodb:
    image: mongo:latest
    networks:
      - broker-kafka
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongodb:/data/db
      - mongoconfig:/data/configdb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    ports:
      - 2181:2181
    depends_on:
      - mongodb
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    # ports:
    #   - 9092:9092
    # environment:
    #   KAFKA_BROKER_ID: 1
    #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://127.0.0.1:9092,EXTERNAL2://127.0.0.1:9093,EXTERNAL3://127.0.0.1:9094,EXTERNAL4://127.0.0.1:9095
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,EXTERNAL2:PLAINTEXT,EXTERNAL3:PLAINTEXT,EXTERNAL4:PLAINTEXT
    #   KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    #   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #   KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    #   KAFKA_CREATE_TOPICS: order-topic:3:1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  # ms-rails:
  #   build:
  #     context: ./ms-rails/
  #     dockerfile: Dockerfile
  #   container_name: ms_rails_app
  #   depends_on:
  #     - kafka
  #   networks:
  #     - broker-kafka
  #   ports:
  #     - 3000:3000

  ms-go:
    build:
      context: ./ms-go/
      dockerfile: Dockerfile
    container_name: ms_go_app
    depends_on:
      - kafka
    networks:
      - broker-kafka
    ports:
      - 3030:3030

volumes:
  mongodb:
  mongoconfig:

networks:
  broker-kafka:
    driver: bridge
